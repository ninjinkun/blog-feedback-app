# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:11-stretch-node-browsers-legacy

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install JUnit coverage reporter
          command: yarn add --dev jest-junit

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

      - restore_cache:
          keys:
          - v2-dependencies-functions-{{ checksum "functions/package.json" }}
          - v2-dependencies-functions-

      - run: cd functions && yarn install && cd ..

      - save_cache:
          paths:
            - functions/node_modules
          key: v2-dependencies-functions-{{ checksum "functions/package.json" }}


      # run tests!
      - run: yarn eslint
      - run: yarn test:compile
      - run:
          command: yarn test:compile
          working_directory: functions
      - run: yarn firebase use development --token "$FIREBASE_TOKEN_DEVELOPMENT"
      - run: yarn firebase setup:emulators:firestore
      - run:
          command: yarn firebase emulators:start
          background: true
      - run:
          name: Run tests with JUnit as reporter
          command: yarn test:ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/

      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit

      - persist_to_workspace:
          root: .
          paths:
            - .

  deploy_development:
    docker:
      - image: circleci/node:10.16
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run: yarn build
      - run: yarn firebase deploy --project development --token "$FIREBASE_TOKEN_DEVELOPMENT"
      - run: yarn deploy-storybook -- --ci

  deploy_production:
    docker:
      - image: circleci/node:10.16
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run: yarn build:production
      - run: yarn firebase deploy --project production --token "$FIREBASE_TOKEN_PRODUCTION"

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      - deploy_development:
          requires:
            - build
          filters:
            branches:
              only: master
      - request_manual_testing:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy_production:
          requires:
            - request_manual_testing
          filters:
            branches:
              only: master

